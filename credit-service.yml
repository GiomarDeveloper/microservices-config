server:
  port: 8083

spring:
  application:
    name: credit-service  # ← AGREGAR ESTO
  
  data:
    mongodb:
      uri: mongodb://localhost:27017/db_credit
      
  # CONFIGURACIÓN KAFKA - AGREGAR ESTO
  kafka:
    bootstrap-servers: localhost:29093
    consumer:
      group-id: credit-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer  # ← DESERIALIZAR COMO STRING
      properties:
        spring.json.trusted.packages: "com.bank.credit.infrastructure.event"
        spring.json.use.type.headers: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false  # ← NO ENVIAR TYPE HEADERS
    properties:
      security.protocol: PLAINTEXT

external:
  services:
    customer:
      url: http://localhost:8081
    account:  # ← AGREGAR ESTO PARA CONSULTAR CUENTAS
      url: http://localhost:8082

# CONFIGURACIÓN KAFKA TOPICS - AGREGAR ESTO
app:
  kafka:
    topics:
      credit-balance-inquiry: yanki.credit.balance.inquiry
      credit-balance-response: yanki.credit.balance.response

logging:
  level:
    root: INFO
    com.bank.credit: DEBUG
    org.springframework.kafka: INFO  # ← AGREGAR PARA DEBUG KAFKA
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,beans
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
  info:
    env:
      enabled: true
    build:
      enabled: true

info:
  app:
    name: ${spring.application.name}
    version: 1.0
    description: Microservice for bank credit management
    
# Configuración de Eureka
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:  # ← AGREGAR ESTO
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: false
    hostname: localhost
    instance-id: ${spring.application.name}:${server.port}