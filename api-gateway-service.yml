server:
  port: 8079

spring:
  application:
    name: api-gateway-service
  security:
    jwt:
      secret-key: "BankApp2025!SuperSecureJWTKey@256BitsForMicroservicesGateway#SpringBoot3"
      expiration-time: 86400000 # 24 horas en milisegundos

  app:
    users:
      - username: "admin"
        password: "admin123"
        roles:
          - "ROLE_ADMIN"
          - "ROLE_USER"
      - username: "user"
        password: "user123"
        roles:
          - "ROLE_USER"
      - username: "operator"
        password: "operator123"
        roles:
          - "ROLE_OPERATOR"

  cloud:
    gateway:
      # Configuración de rutas estáticas con URLs DIRECTAS
      routes:
        # Customer Service Route - URL DIRECTA
        - id: customer-service
          uri: http://localhost:8081  # Puerto de tu customer service
          predicates:
            - Path=/api/customers/**
          filters:
            - RewritePath=/api/customers/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: customerService
                fallbackUri: forward:/fallback/customer

        # Account Service Route - URL DIRECTA
        - id: account-service
          uri: http://localhost:8082  # Puerto de tu account service
          predicates:
            - Path=/api/accounts/**
          filters:
            - RewritePath=/api/accounts/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: accountService
                fallbackUri: forward:/fallback/account

        # Credit Service Route - URL DIRECTA
        - id: credit-service
          uri: http://localhost:8083  # Puerto de tu credit service
          predicates:
            - Path=/api/credits/**
          filters:
            - RewritePath=/api/credits/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: creditService
                fallbackUri: forward:/fallback/credit

        # Transaction Service Route - URL DIRECTA
        - id: transaction-service
          uri: http://localhost:8084  # Puerto de tu transaction service
          predicates:
            - Path=/api/transactions/**
          filters:
            - RewritePath=/api/transactions/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: transactionService
                fallbackUri: forward:/fallback/transaction

      # Deshabilitar discovery locator ya que usamos URLs directas
      discovery:
        locator:
          enabled: false
          
      # Configuración de HTTP Client
      httpclient:
        connect-timeout: 2000
        response-timeout: 10s
        pool:
          max-connections: 1000
          max-idle-time: 30000

    # Configuración del Config Client
    config:
      uri: http://localhost:8888
      fail-fast: false

  # Circuit Breaker Configuration
  resilience4j:
    circuitbreaker:
      configs:
        default:
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
          permittedNumberOfCallsInHalfOpenState: 3
          automaticTransitionFromOpenToHalfOpenEnabled: true
      instances:
        customerService:
          baseConfig: default
        accountService:
          baseConfig: default  
        creditService:
          baseConfig: default
        transactionService:
          baseConfig: default

# Eureka Client Configuration (OPCIONAL - puedes comentarlo si no usas Eureka)
eureka:
  client:
    enabled: false  # Deshabilitar Eureka si solo usas URLs directas
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: false
    fetch-registry: false

# Actuator Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    gateway:
      enabled: true
    info:
      enabled: true
  info:
    env:
      enabled: true
    build:
      enabled: true

# Información de la aplicación
info:
  app:
    name: ${spring.application.name}
    description: API Gateway for Bank Microservices System
    version: 1.0.0
    environment: development

# Logging
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: DEBUG
    com.bank.gateway: INFO