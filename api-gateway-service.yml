server:
  port: 8079

spring:
  application:
    name: api-gateway-service
  security:
    jwt:
      secret-key: "BankApp2025!SuperSecureJWTKey@256BitsForMicroservicesGateway#SpringBoot3"
      expiration-time: 86400000 # 24 horas en milisegundos

  # MOVER app AQUÍ DENTRO DE spring:
  app:
    users:
      - username: "admin"
        password: "admin123"
        roles:
          - "ROLE_ADMIN"
          - "ROLE_USER"
      - username: "user"
        password: "user123"
        roles:
          - "ROLE_USER"
      - username: "operator"
        password: "operator123"
        roles:
          - "ROLE_OPERATOR"

  cloud:
    gateway:
      routes:
        # Customer Service Route
        - id: customer-service
          uri: lb://CUSTOMER-SERVICE
          predicates:
            - Path=/api/customers/**
          filters:
            - RewritePath=/api/customers/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: customerService
                fallbackUri: forward:/fallback/customer

        # Account Service Route
        - id: account-service
          uri: lb://ACCOUNT-SERVICE
          predicates:
            - Path=/api/accounts/**
          filters:
            - RewritePath=/api/accounts/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: accountService
                fallbackUri: forward:/fallback/account

        # Credit Service Route
        - id: credit-service
          uri: lb://CREDIT-SERVICE
          predicates:
            - Path=/api/credits/**
          filters:
            - RewritePath=/api/credits/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: creditService
                fallbackUri: forward:/fallback/credit

        # Transaction Service Route
        - id: transaction-service
          uri: lb://TRANSACTION-SERVICE
          predicates:
            - Path=/api/transactions/**
          filters:
            - RewritePath=/api/transactions/?(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: transactionService
                fallbackUri: forward:/fallback/transaction

      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          
      httpclient:
        connect-timeout: 2000
        response-timeout: 10s

    config:
      uri: http://localhost:8888
      fail-fast: false

# El resto de la configuración permanece igual...
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
    instances:
      customerService:
        baseConfig: default
      accountService:
        baseConfig: default  
      creditService:
        baseConfig: default
      transactionService:
        baseConfig: default

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    gateway:
      enabled: true

info:
  app:
    name: ${spring.application.name}
    description: API Gateway for Bank Microservices System
    version: 1.0.0
    environment: development

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: DEBUG
    com.bank.gateway: INFO
    com.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG