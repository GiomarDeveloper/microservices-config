server:
  port: 8084

spring:
  application:
    name: transaction-service  # ← AGREGAR ESTO
  
  data:
    mongodb:
      # Para docker:
      # uri: mongodb://host.docker.internal:27017/db_transaction
      # Local
      uri: mongodb://localhost:27017/db_transaction

  # CONFIGURACIÓN KAFKA - AGREGAR ESTO
  kafka:
    bootstrap-servers: localhost:29093
    consumer:
      group-id: transaction-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "com.bank.yanki.application.event,com.bank.yanki.domain.model"
        spring.json.use.type.headers: false
        spring.json.value.default.type: "com.bank.transaction.application.event.TransactionPaymentRequestEvent,com.bank.transaction.application.event.TransactionConsumptionRequestEvent"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      security.protocol: PLAINTEXT

external:
  services:
    account:
      url: http://localhost:8082
    credit:
      url: http://localhost:8083

# CONFIGURACIÓN KAFKA TOPICS - AGREGAR ESTO
app:
  kafka:
    topics:
      transaction-payment-request: transaction.payment.request
      transaction-consumption-request: transaction.consumption.request

logging:
  level:
    root: INFO
    com.bank.transaction: DEBUG
    org.springframework.kafka: INFO  # ← AGREGAR PARA DEBUG KAFKA
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,beans
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
  info:
    env:
      enabled: true
    build:
      enabled: true

info:
  app:
    name: ${spring.application.name}
    version: 1.0
    description: Microservice for bank transaction management
    
# Configuración de Eureka
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka  # ← AGREGAR ESTO
  instance:
    prefer-ip-address: false
    hostname: localhost
    instance-id: ${spring.application.name}:${server.port}